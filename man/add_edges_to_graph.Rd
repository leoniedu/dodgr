% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/add-edges-to-graph.R
\name{add_edges_to_graph}
\alias{add_edges_to_graph}
\title{Add edges between specified points and closest graph vertices}
\usage{
add_edges_to_graph(
  graph,
  xy,
  highway,
  wt_profile = NULL,
  wt_profile_file = NULL,
  bidirectional = TRUE
)
}
\arguments{
\item{graph}{A \code{data.frame} representing the graph with the specified
columns of a \code{dodgr} graph.}

\item{xy}{Coordinates of points to be connected to the graph. Can be either
a matrix or \code{data.frame} with two columns (longitude and latitude),
a vector of length two, or an \code{sf} object. If a \code{data.frame},
it may optionally include an \code{id} column to specify custom IDs for
the points.}

\item{highway}{Character string specifying the highway type for the new edges.
This determines the weight calculations for \code{d_weighted}, \code{time},
and \code{time_weighted}. Original graph edges retain their existing highway
and other column values.}

\item{wt_profile}{Weight profile for the specified mode of transport (see
\link{weight_streetnet}). If \code{NULL} (default), edge properties are
inherited from the matched edges in the graph.}

\item{wt_profile_file}{Custom profile file for weights (see
\link{weight_streetnet}). Only used when \code{wt_profile} is specified.}

\item{bidirectional}{If \code{TRUE} (default), creates bidirectional edges
(to and from each point). If \code{FALSE}, creates only unidirectional edges
from points to vertices.}
}
\value{
A modified graph with additional edges connecting the specified
points to their closest vertices.
}
\description{
Creates new edges connecting specified point coordinates to their closest
vertices in the graph, as determined by \code{match_pts_to_verts}. The new
edges inherit properties from the first edge found that contains the matched
vertex, ensuring consistent weight and time calculations.
}
\details{
The function matches each point to its closest vertex using
\code{match_pts_to_verts}, then creates new edges with properties based on
the first existing edge found that contains the matched vertex. When
\code{wt_profile} is \code{NULL}, edge weights and times are calculated by
inheriting ratios from the matched edges. When a weight profile is specified,
standard weight calculations are applied based on the highway type and profile.
}
\examples{
\dontrun{
graph <- weight_streetnet(hampi)
pts <- matrix(c(76.46, 15.34, 76.47, 15.35), ncol = 2)
graph_with_edges <- add_edges_to_graph(graph, pts, highway = "residential")

# With custom IDs
pts_with_id <- data.frame(
  x = c(76.46, 76.47), 
  y = c(15.34, 15.35),
  id = c("point1", "point2")
)
graph_with_edges <- add_edges_to_graph(graph, pts_with_id, highway = "residential")
}
}
\concept{graph modification}
